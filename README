!!!!
DEPRECATED, in favor of [ffpyplayer](https://github.com/matham/ffpyplayer)
!!!!

FFMPEG for Android
------------------

This version is made in top of the bambuser original version.
All credits about toolchain / ffmpeg android are to http://bambuser.com/
Check the original source code at: http://bambuser.com/opensource

This version include a specific Python wrapper to decode audio / video,
implemented to be as portable as possible. The goal is to use it for a
core provider in the Kivy project, on android platform.

STATUS: working, but in heavy stabilization

Toolchain setup
---------------

Download the Android NDK Revision 5b from
http://developer.android.com/sdk/ndk/index.html

Extract it into a folder (e.g. your home directory, the example is
for the mac os x version):

tar -jxvf android-ndk-r5b-darwin-x86.tar.bz2
mv android-ndk-r5b android-ndk


Extracting the source
---------------------

The original upstream source (and the patches, if any) can be extracted
by running ./extract.sh.

Building
--------

(not updated, don't use.)

To build, first set the environment variable NDK to point to the
directory where the NDK is installed:

export NDK=~/android-ndk

Then just call ./build.sh.

To clean up the newly built files (removed unused files, remove libraries
with version numbers in the name), call ./clean-build.sh.

Building Python extension
-------------------------

(Only video with h264+aac, usually named .mp4, will work.)

If you want to test on your computer, you need to build an x86 version::

	FFMPEG_ARCHS='x86' ./build-h264-aac.sh

Then build the python extension::

	cd python
	FFMPEG_LIBRARIES='SDL SDL_mixer' FFMPEG_LIBRARY_DIRS='/usr/lib' \
	FFMPEG_INCLUDES='/usr/include/SDL' FFMPEG_ROOT=../build/ffmpeg/x86/ \
	python setup.py build_ext --inplace -f

And for testing::

	python ffmpeg/__init__.py <yourvideofile.mkv>
